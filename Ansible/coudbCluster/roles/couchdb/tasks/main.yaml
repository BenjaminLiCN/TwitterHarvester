---
#- name: create couchdb_dir
#  tags: 'couchdb'
#  become: yes
#  file:
#    path: "{{ couchdb_dir }}"
#    state: directory
#
- name: Configure compose
  tags: 'couchdb'
  become: yes
  template:
    src: docker-compose.yaml.j2
    dest: "{{ couchdb_dir }}/docker-compose.yaml"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
#
#- name: Config dockerfile
#  tags: 'couchdb'
#  become: yes
#  template:
#    src: Dockerfile
#    dest: "{{ couchdb_dir }}/Dockerfile"
#    owner: "{{ ansible_user }}"
#    group: "{{ ansible_user }}"
#
#- name: Config requirement
#  tags: 'couchdb'
#  become: yes
#  template:
#    src: requirements.txt
#    dest: "{{ couchdb_dir }}/requirements.txt"
#    owner: "{{ ansible_user }}"
#    group: "{{ ansible_user }}"
#
- name: Remove previous couchdb container
  become: yes
  shell: |
    docker stop couchdb_db_1
    docker rm couchdb_db_1
    
- name: Run docker compose
  tags: 'couchdb'
  become: yes
  docker_compose:
    project_src: "{{ couchdb_dir }}"
    pull: yes
    state: present
    remove_orphans: yes
    recreate: always
    
- name: action enable_cluster
  become: yes
  uri:
    url: http://{{ ansible_host }}:5984/_cluster_setup
    method: POST
    return_content: yes
    user: admin
    password: password
    headers:
      Content-Type: application/json
      Accept: application/json
    body: {"action": "enable_cluster", "bind_address": "0.0.0.0", "username": "admin", "password": "password", "node_count": "4"}
    body_format: json
    validate_certs: no
    status_code: 400
  ignore_errors: yes

- name: action coordinator enable
  become: yes
  uri:
    url: http://{{ ansible_host }}:5984/_cluster_setup
    method: POST
    return_content: yes
    user: admin
    password: password
    headers:
      Content-Type: application/json
      Accept: application/json
    body: {"action": "enable_cluster", "bind_address":"0.0.0.0", "username": "admin", "password":"password", "port": 5984, "node_count": "4", "remote_node": "{{ item }}", "remote_current_user": "admin", "remote_current_password": "password" }
    body_format: json
    validate_certs: no
    status_code: 201
  with_items: "{{ groups['couches'] }}"
  when: inventory_hostname == "{{ groups.couches[0] }}" and inventory_hostname != item

- name: action coordinator add_node
  become: yes
  uri:
    url: http://{{ ansible_host }}:5984/_cluster_setup
    method: POST
    return_content: yes
    user: admin
    password: password
    headers:
      Content-Type: application/json
      Accept: application/json
    body: {"action": "add_node", "host":"{{ item }}", "port": "5984", "username": "admin", "password":"password"}
    body_format: json
    validate_certs: no
    status_code: 201
  with_items: "{{ groups['couches'] }}"
  when: inventory_hostname == "{{ groups.couches[0] }}" and inventory_hostname != item

- name: action coordinator finish_cluster
  become: yes
  uri:
    url: http://{{ ansible_host }}:5984/_cluster_setup
    method: POST
    return_content: yes
    user: admin
    password: password
    headers:
      Content-Type: application/json
      Accept: application/json
    body: {"action": "finish_cluster"}
    body_format: json
    validate_certs: no
    status_code: 201
  when: inventory_hostname == "{{ groups.couches[0] }}"
  
- name: check cluster status
  become: yes
  uri:
    url: http://localhost:5984/_membership
    method: GET
    return_content: yes
    status_code: 200
  when: inventory_hostname == "{{ groups.couches[0] }}"
  ignore_errors: yes
  
- name: judge wheter web exist
  command: "ls {{ couchdb_dir }}/twitterHarvester"
  ignore_errors: True
  register: result

- name: Run docker run web
  tags: 'couchdb'
  become: yes
  command: "chdir={{ couchdb_dir }} docker-compose run web django-admin startproject  twitterHarvester ."
  when: result is failed

- name: Run docker web up
  tags: 'couchdb'
  become: yes
  command: "chdir={{ couchdb_dir }} docker-compose up -d"

- name: Config settings.py
  tags: 'couchdb'
  become: yes
  template:
    src: settings.py
    dest: "{{ couchdb_dir }}/twitterHarvester/settings.py"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"


