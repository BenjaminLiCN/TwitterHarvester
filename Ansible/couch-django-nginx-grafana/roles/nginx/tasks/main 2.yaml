---
- name: Ansible check directory exists example.
  stat:
    path: "{{ nginx_path }}"
  register: files_to_create

- name: create nginx directory on hosts
  tags: 'nginx'
  become: yes
  file:
    path: "{{ nginx_path }}"
    state: directory
  when: files_to_create.stat.exists == False and files_to_delete.stat.isdir
- name: copy build folder to nginx
  become: yes
  copy:
    src: build
    dest: "{{ nginx_path }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  when: inventory_hostname == "{{ groups.couches[0] }}"
  
- name: copy Dockerfile to all host
  become: yes
  template:
    src: Dockerfile
    dest: "{{ nginx_path }}/Dockerfile"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  when: inventory_hostname == "{{ groups.couches[0] }}"
    
#- name: copy nginx config file to all host but coordinator
#  become: yes
#  template:
#    src: default.conf
#    dest: "{{ nginx_path }}/default.conf"
#    owner: "{{ ansible_user }}"
#    group: "{{ ansible_user }}"
#  when: inventory_hostname != "{{ groups.couches[0] }}"
  
#- name: copy front-end files to coordinator
- name: copy coordinator config file
  become: yes
  template:
    src: default.conf.j2
    dest: "{{ nginx_path }}/default.conf"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  when: inventory_hostname == "{{ groups.couches[0] }}"

- name: run Dockerfile on each host
  become: yes
  shell: |
    docker stop load-balancer
    docker rm load-balancer
    docker build -t mynginx .
    docker run --name load-balancer -d -p 80:80 -p 8081:8081 mynginx
  args:
    chdir: "{{ nginx_path }}"
  when: inventory_hostname == "{{ groups.couches[0] }}"

